{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _1 = __importStar(require(\".\"));\n\nvar react_1 = require(\"react\");\n\nvar utils_1 = require(\"./utils\");\n\nexports.useMutation = function (urlOrMutation, mutationArg) {\n  var context = react_1.useContext(_1.FetchContext);\n  utils_1.useURLRequiredInvariant(!!context.url && Array.isArray(urlOrMutation), 'useMutation');\n  utils_1.useURLRequiredInvariant(!!context.url || utils_1.isString(urlOrMutation) && !mutationArg, 'useMutation', 'OR you need to do useMutation(\"https://example.com\", `your graphql mutation`)'); // regular no context: useMutation('https://example.com', `graphql MUTATION`)\n\n  var url = urlOrMutation;\n  var MUTATION = mutationArg; // tagged template literal with context: useMutation`graphql MUTATION`\n\n  if (Array.isArray(urlOrMutation) && context.url) {\n    utils_1.invariant(!mutationArg, 'You cannot have a 2nd argument when using tagged template literal syntax with useMutation.');\n    url = context.url;\n    MUTATION = urlOrMutation[0]; // regular with context: useMutation(`graphql MUTATION`)\n  } else if (urlOrMutation && !mutationArg && context.url) {\n    url = context.url;\n    MUTATION = urlOrMutation;\n  }\n\n  var _a = _1.default(url),\n      loading = _a.loading,\n      error = _a.error,\n      cache = _a.cache,\n      request = __rest(_a, [\"loading\", \"error\", \"cache\"]);\n\n  var mutate = react_1.useCallback(function (inputs) {\n    return request.mutate(MUTATION, inputs);\n  }, [MUTATION, request]);\n  var data = (request.data || {\n    data: undefined\n  }).data;\n  return Object.assign([data, loading, error, mutate], {\n    data: data,\n    loading: loading,\n    error: error,\n    mutate: mutate,\n    cache: cache\n  });\n};","map":{"version":3,"sources":["../src/useMutation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,EAAA,GAAA,YAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAaa,OAAA,CAAA,WAAA,GAAc,UACzB,aADyB,EAEzB,WAFyB,EAEL;AAEpB,MAAM,OAAO,GAAG,OAAA,CAAA,UAAA,CAAW,EAAA,CAAA,YAAX,CAAhB;AAEA,EAAA,OAAA,CAAA,uBAAA,CACE,CAAC,CAAC,OAAO,CAAC,GAAV,IAAiB,KAAK,CAAC,OAAN,CAAc,aAAd,CADnB,EAEE,aAFF;AAIA,EAAA,OAAA,CAAA,uBAAA,CACE,CAAC,CAAC,OAAO,CAAC,GAAV,IAAkB,OAAA,CAAA,QAAA,CAAS,aAAT,KAA2B,CAAC,WADhD,EAEE,aAFF,EAGE,+EAHF,EARoB,CAcpB;;AACA,MAAI,GAAG,GAAG,aAAV;AACA,MAAI,QAAQ,GAAG,WAAf,CAhBoB,CAkBpB;;AACA,MAAI,KAAK,CAAC,OAAN,CAAc,aAAd,KAAgC,OAAO,CAAC,GAA5C,EAAiD;AAC/C,IAAA,OAAA,CAAA,SAAA,CACE,CAAC,WADH,EAEE,4FAFF;AAIA,IAAA,GAAG,GAAG,OAAO,CAAC,GAAd;AACA,IAAA,QAAQ,GAAG,aAAa,CAAC,CAAD,CAAxB,CAN+C,CAQ/C;AACD,GATD,MASO,IAAI,aAAa,IAAI,CAAC,WAAlB,IAAiC,OAAO,CAAC,GAA7C,EAAkD;AACvD,IAAA,GAAG,GAAG,OAAO,CAAC,GAAd;AACA,IAAA,QAAQ,GAAG,aAAX;AACD;;AAED,MAAM,EAAA,GAAA,EAAA,CAAA,OAAA,CAAA,GAAA,CAAN;AAAA,MAAQ,OAAA,GAAA,EAAA,CAAA,OAAR;AAAA,MAAiB,KAAA,GAAA,EAAA,CAAA,KAAjB;AAAA,MAAwB,KAAA,GAAA,EAAA,CAAA,KAAxB;AAAA,MAA+B,OAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAA/B;;AAEA,MAAM,MAAM,GAAG,OAAA,CAAA,WAAA,CACb,UAAC,MAAD,EAAgB;AAAmB,WAAA,OAAO,CAAC,MAAR,CAAe,QAAf,EAAA,MAAA,CAAA;AAAgC,GADtD,EAEb,CAAC,QAAD,EAAW,OAAX,CAFa,CAAf;AAKA,MAAM,IAAI,GAAG,CAAC,OAAO,CAAC,IAAR,IAAyC;AAAE,IAAA,IAAI,EAAE;AAAR,GAA1C,EAA+D,IAA5E;AAEA,SAAO,MAAM,CAAC,MAAP,CACL,CAAC,IAAD,EAAO,OAAP,EAAgB,KAAhB,EAAuB,MAAvB,CADK,EAEL;AAAE,IAAA,IAAI,EAAA,IAAN;AAAQ,IAAA,OAAO,EAAA,OAAf;AAAiB,IAAA,KAAK,EAAA,KAAtB;AAAwB,IAAA,MAAM,EAAA,MAA9B;AAAgC,IAAA,KAAK,EAAA;AAArC,GAFK,CAAP;AAID,CAhDY","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __importStar(require(\".\"));\nvar react_1 = require(\"react\");\nvar utils_1 = require(\"./utils\");\nexports.useMutation = function (urlOrMutation, mutationArg) {\n    var context = react_1.useContext(_1.FetchContext);\n    utils_1.useURLRequiredInvariant(!!context.url && Array.isArray(urlOrMutation), 'useMutation');\n    utils_1.useURLRequiredInvariant(!!context.url || (utils_1.isString(urlOrMutation) && !mutationArg), 'useMutation', 'OR you need to do useMutation(\"https://example.com\", `your graphql mutation`)');\n    // regular no context: useMutation('https://example.com', `graphql MUTATION`)\n    var url = urlOrMutation;\n    var MUTATION = mutationArg;\n    // tagged template literal with context: useMutation`graphql MUTATION`\n    if (Array.isArray(urlOrMutation) && context.url) {\n        utils_1.invariant(!mutationArg, 'You cannot have a 2nd argument when using tagged template literal syntax with useMutation.');\n        url = context.url;\n        MUTATION = urlOrMutation[0];\n        // regular with context: useMutation(`graphql MUTATION`)\n    }\n    else if (urlOrMutation && !mutationArg && context.url) {\n        url = context.url;\n        MUTATION = urlOrMutation;\n    }\n    var _a = _1.default(url), loading = _a.loading, error = _a.error, cache = _a.cache, request = __rest(_a, [\"loading\", \"error\", \"cache\"]);\n    var mutate = react_1.useCallback(function (inputs) { return request.mutate(MUTATION, inputs); }, [MUTATION, request]);\n    var data = (request.data || { data: undefined }).data;\n    return Object.assign([data, loading, error, mutate], { data: data, loading: loading, error: error, mutate: mutate, cache: cache });\n};\n//# sourceMappingURL=useMutation.js.map"]},"metadata":{},"sourceType":"script"}