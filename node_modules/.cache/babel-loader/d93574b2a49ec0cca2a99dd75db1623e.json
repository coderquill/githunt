{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"./utils\");\n\nvar setCache = function () {};\n\nvar makeCache = function () {\n  var configs = {}; // the data cache\n\n  var cache = new Map(); // data:  { '/path': 'associated data' }\n  // the error cache\n\n  var errors = {}; // const listeners = []\n\n  var listeners = {}; // const data = {}\n\n  var promises = {}; // suspense\n\n  var revalidators = {}; // what will call api in background, set cache, then rerender component\n\n  var focusRevalidators = {};\n  var expirations = {};\n\n  function configure(path, _a) {\n    var persist = _a.persist,\n        cachePolicy = _a.cachePolicy,\n        cacheLife = _a.cacheLife,\n        rest = __rest(_a, [\"persist\", \"cachePolicy\", \"cacheLife\"]);\n\n    configs[path] = __assign({\n      persist: persist,\n      cachePolicy: cachePolicy,\n      cacheLife: cacheLife\n    }, rest);\n    expirations[path] = Date.now() + cacheLife;\n  }\n\n  function getLocalCache(path) {\n    return Object.defineProperties({\n      promise: promises[path],\n      promises: promises,\n      error: errors[path],\n      has: function (key) {\n        return cache.has(key);\n      },\n      errors: errors,\n      listeners: listeners[path],\n      notify: function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return notify.apply(void 0, __spreadArrays([path], args));\n      },\n      set: function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return set.apply(void 0, __spreadArrays([path], args));\n      },\n      get: function () {\n        return cache.get(path);\n      },\n      remove: function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return remove.apply(void 0, __spreadArrays([path], args));\n      },\n      clear: clear,\n      subscribe: function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return subscribe.apply(void 0, __spreadArrays([path], args));\n      },\n      unsubscribe: function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return subscribe.apply(void 0, __spreadArrays([path], args));\n      }\n    }, {\n      data: {\n        get: function () {\n          return cache.get(path);\n        }\n      },\n      promise: {\n        set: function (p) {\n          promises[path] = p;\n        },\n        get: function () {\n          return promises[path];\n        }\n      },\n      isStale: {\n        get: function () {\n          return !expirations[path] || expirations[path] < Date.now();\n        }\n      }\n    });\n  } // function get (path, { persist, cachePolicy, cacheLife }) {}\n\n\n  function set(path, value, shouldNotify) {\n    if (shouldNotify === void 0) {\n      shouldNotify = true;\n    }\n\n    cache.set(path, value);\n    expirations[path] = Date.now() + configs[path].cacheLife;\n    if (shouldNotify) notify(path, value, false); // notify()\n  } // function keys (path, { persist, cachePolicy, cacheLife }) {}\n  // function has (path, { persist, cachePolicy, cacheLife }) {}\n\n\n  function clear(shouldNotify) {\n    if (shouldNotify === void 0) {\n      shouldNotify = true;\n    }\n\n    if (shouldNotify) cache.forEach(function (path) {\n      return notify(path, null, false);\n    });\n    cache.clear(); // notify()\n  }\n\n  function remove(path, shouldNotify) {\n    if (shouldNotify === void 0) {\n      shouldNotify = true;\n    }\n\n    if (shouldNotify) setCache(path, null, false);\n    cache.delete(path); // notify()\n  }\n\n  function subscribe(path, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    } // let isSubscribed = true\n\n\n    if (!listeners[path]) listeners[path] = [];\n    listeners[path].push(listener); // return () => {\n    //   if (!isSubscribed) return\n    //   isSubscribed = false\n    //   const index = listeners.indexOf(listener)\n    //   if (index > -1) {\n    //     listeners[index] = listeners[listeners.length - 1]\n    //     listeners.length--\n    //   }\n    // }\n  }\n\n  function unsubscribe(path, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    var index = listeners.indexOf(listener);\n\n    if (index > -1) {\n      listeners[index] = listeners[listeners.length - 1];\n      listeners.length--;\n    }\n  } // Notify Cache subscribers about a change in the cache\n\n\n  function notify(path) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (listeners[path]) {\n      if (utils_1.isFunction(args[0])) return listeners[path].forEach(args[0]);\n      listeners[path].forEach(function (l) {\n        return l.apply(void 0, args);\n      });\n    } else {\n      console.log('There are no listeners ðŸ˜…');\n    }\n  }\n\n  return Object.defineProperties({\n    configure: configure,\n    // subscribe,\n    get: function (k) {\n      return cache.get(k);\n    },\n    set: set,\n    keys: function () {\n      return Array.from(cache.keys());\n    },\n    has: function (k) {\n      return cache.has(k);\n    },\n    clear: clear,\n    delete: remove,\n    getLocalCache: getLocalCache // promises,\n    // revalidators,\n    // focusRevalidators,\n    // errors\n\n  }, {\n    data: {\n      // we have this as a getter for performance\n      get: function () {\n        return Array.from(cache).reduce(function (acc, _a) {\n          var _b;\n\n          var k = _a[0],\n              v = _a[1];\n          return __assign(__assign({}, acc), (_b = {}, _b[k] = v, _b));\n        }, {});\n      }\n    }\n  });\n};\n\nvar theCache = makeCache(); // window.myCache = theCache\n\nexports.default = theCache;","map":{"version":3,"sources":["../src/cache.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nvar setCache = function () { };\nvar makeCache = function () {\n    var configs = {};\n    // the data cache\n    var cache = new Map(); // data:  { '/path': 'associated data' }\n    // the error cache\n    var errors = {};\n    // const listeners = []\n    var listeners = {};\n    // const data = {}\n    var promises = {}; // suspense\n    var revalidators = {}; // what will call api in background, set cache, then rerender component\n    var focusRevalidators = {};\n    var expirations = {};\n    function configure(path, _a) {\n        var persist = _a.persist, cachePolicy = _a.cachePolicy, cacheLife = _a.cacheLife, rest = __rest(_a, [\"persist\", \"cachePolicy\", \"cacheLife\"]);\n        configs[path] = __assign({ persist: persist, cachePolicy: cachePolicy, cacheLife: cacheLife }, rest);\n        expirations[path] = Date.now() + cacheLife;\n    }\n    function getLocalCache(path) {\n        return Object.defineProperties({\n            promise: promises[path],\n            promises: promises,\n            error: errors[path],\n            has: function (key) { return cache.has(key); },\n            errors: errors,\n            listeners: listeners[path],\n            notify: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return notify.apply(void 0, __spreadArrays([path], args));\n            },\n            set: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return set.apply(void 0, __spreadArrays([path], args));\n            },\n            get: function () { return cache.get(path); },\n            remove: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return remove.apply(void 0, __spreadArrays([path], args));\n            },\n            clear: clear,\n            subscribe: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return subscribe.apply(void 0, __spreadArrays([path], args));\n            },\n            unsubscribe: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return subscribe.apply(void 0, __spreadArrays([path], args));\n            }\n        }, {\n            data: { get: function () { return cache.get(path); } },\n            promise: {\n                set: function (p) { promises[path] = p; },\n                get: function () { return promises[path]; }\n            },\n            isStale: { get: function () { return !expirations[path] || expirations[path] < Date.now(); } }\n        });\n    }\n    // function get (path, { persist, cachePolicy, cacheLife }) {}\n    function set(path, value, shouldNotify) {\n        if (shouldNotify === void 0) { shouldNotify = true; }\n        cache.set(path, value);\n        expirations[path] = Date.now() + configs[path].cacheLife;\n        if (shouldNotify)\n            notify(path, value, false);\n        // notify()\n    }\n    // function keys (path, { persist, cachePolicy, cacheLife }) {}\n    // function has (path, { persist, cachePolicy, cacheLife }) {}\n    function clear(shouldNotify) {\n        if (shouldNotify === void 0) { shouldNotify = true; }\n        if (shouldNotify)\n            cache.forEach(function (path) { return notify(path, null, false); });\n        cache.clear();\n        // notify()\n    }\n    function remove(path, shouldNotify) {\n        if (shouldNotify === void 0) { shouldNotify = true; }\n        if (shouldNotify)\n            setCache(path, null, false);\n        cache.delete(path);\n        // notify()\n    }\n    function subscribe(path, listener) {\n        if (typeof listener !== 'function') {\n            throw new Error('Expected the listener to be a function.');\n        }\n        // let isSubscribed = true\n        if (!listeners[path])\n            listeners[path] = [];\n        listeners[path].push(listener);\n        // return () => {\n        //   if (!isSubscribed) return\n        //   isSubscribed = false\n        //   const index = listeners.indexOf(listener)\n        //   if (index > -1) {\n        //     listeners[index] = listeners[listeners.length - 1]\n        //     listeners.length--\n        //   }\n        // }\n    }\n    function unsubscribe(path, listener) {\n        if (typeof listener !== 'function') {\n            throw new Error('Expected the listener to be a function.');\n        }\n        var index = listeners.indexOf(listener);\n        if (index > -1) {\n            listeners[index] = listeners[listeners.length - 1];\n            listeners.length--;\n        }\n    }\n    // Notify Cache subscribers about a change in the cache\n    function notify(path) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (listeners[path]) {\n            if (utils_1.isFunction(args[0]))\n                return listeners[path].forEach(args[0]);\n            listeners[path].forEach(function (l) { return l.apply(void 0, args); });\n        }\n        else {\n            console.log('There are no listeners ðŸ˜…');\n        }\n    }\n    return Object.defineProperties({\n        configure: configure,\n        // subscribe,\n        get: function (k) { return cache.get(k); },\n        set: set,\n        keys: function () { return Array.from(cache.keys()); },\n        has: function (k) { return cache.has(k); },\n        clear: clear,\n        delete: remove,\n        getLocalCache: getLocalCache\n        // promises,\n        // revalidators,\n        // focusRevalidators,\n        // errors\n    }, {\n        data: {\n            // we have this as a getter for performance\n            get: function () { return Array.from(cache).reduce(function (acc, _a) {\n                var _b;\n                var k = _a[0], v = _a[1];\n                return (__assign(__assign({}, acc), (_b = {}, _b[k] = v, _b)));\n            }, {}); }\n        }\n    });\n};\nvar theCache = makeCache();\n// window.myCache = theCache\nexports.default = theCache;\n//# sourceMappingURL=cache.js.map"]},"metadata":{},"sourceType":"script"}