{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // @ts-nocheck\n\nvar types_1 = require(\"./types\");\n\nvar utils_1 = require(\"./utils\");\n\nvar react_1 = require(\"react\");\n\nvar FetchContext_1 = __importDefault(require(\"./FetchContext\"));\n\nvar defaults_1 = __importStar(require(\"./defaults\"));\n\nvar cache_1 = __importDefault(require(\"./cache\"));\n\nvar SWR = types_1.CachePolicies.SWR,\n    CACHE_FIRST = types_1.CachePolicies.CACHE_FIRST;\n\nfunction useFetchArgs(urlOrPathOrOptionsOrOverwriteGlobalOptions, optionsOrOverwriteGlobalOrDeps, deps) {\n  utils_1.invariant(!(utils_1.isObject(urlOrPathOrOptionsOrOverwriteGlobalOptions) && utils_1.isObject(optionsOrOverwriteGlobalOrDeps)), 'You cannot have a 2nd parameter of useFetch as object when your first argument is an object.');\n  var context = react_1.useContext(FetchContext_1.default);\n  var host = react_1.useMemo(function () {\n    var maybeHost = urlOrPathOrOptionsOrOverwriteGlobalOptions;\n    if (utils_1.isString(maybeHost) && maybeHost.includes('://')) return maybeHost;\n    if (context.url) return context.url;\n    return defaults_1.default.host;\n  }, [context.url, urlOrPathOrOptionsOrOverwriteGlobalOptions]);\n  var path = react_1.useMemo(function () {\n    var maybePath = urlOrPathOrOptionsOrOverwriteGlobalOptions;\n    if (utils_1.isString(maybePath) && !maybePath.includes('://')) return maybePath;\n  }, [urlOrPathOrOptionsOrOverwriteGlobalOptions]);\n  var overwriteGlobalOptions = react_1.useMemo(function () {\n    if (utils_1.isFunction(urlOrPathOrOptionsOrOverwriteGlobalOptions)) return urlOrPathOrOptionsOrOverwriteGlobalOptions;\n    if (utils_1.isFunction(optionsOrOverwriteGlobalOrDeps)) return optionsOrOverwriteGlobalOrDeps;\n  }, []);\n  var options = react_1.useMemo(function () {\n    var localOptions = {\n      headers: {}\n    };\n\n    if (utils_1.isObject(urlOrPathOrOptionsOrOverwriteGlobalOptions)) {\n      localOptions = urlOrPathOrOptionsOrOverwriteGlobalOptions;\n    } else if (utils_1.isObject(optionsOrOverwriteGlobalOrDeps)) {\n      localOptions = optionsOrOverwriteGlobalOrDeps;\n    }\n\n    var globalOptions = context.options;\n\n    var finalOptions = __assign(__assign(__assign(__assign({}, defaults_1.default), globalOptions), localOptions), {\n      headers: __assign(__assign(__assign({}, defaults_1.default.headers), globalOptions.headers), localOptions.headers),\n      interceptors: __assign(__assign(__assign({}, defaults_1.default.interceptors), globalOptions.interceptors), localOptions.interceptors)\n    });\n\n    if (overwriteGlobalOptions) return overwriteGlobalOptions(finalOptions);\n    return finalOptions;\n  }, [urlOrPathOrOptionsOrOverwriteGlobalOptions, overwriteGlobalOptions, context.options]);\n  var requestInit = react_1.useMemo(function () {\n    return utils_1.pullOutRequestInit(options);\n  }, [options]);\n  var dependencies = react_1.useMemo(function () {\n    if (Array.isArray(optionsOrOverwriteGlobalOrDeps)) return optionsOrOverwriteGlobalOrDeps;\n    if (Array.isArray(deps)) return deps;\n    return defaults_1.default.dependencies;\n  }, [optionsOrOverwriteGlobalOrDeps, deps]);\n  var cacheStaleAfter = options.cacheStaleAfter,\n      retries = options.retries,\n      retryDelay = options.retryDelay,\n      retryOn = options.retryOn;\n  utils_1.invariant(Number.isInteger(cacheStaleAfter) && cacheStaleAfter >= 0, '`cacheStaleAfter` must be a number >= 0');\n  utils_1.invariant(Number.isInteger(retries) && retries >= 0, '`retries` must be a number >= 0');\n  utils_1.invariant(utils_1.isFunction(retryDelay) || Number.isInteger(retryDelay) && retryDelay >= 0, '`retryDelay` must be a positive number or a function returning a positive number.');\n  var isValidRetryOn = utils_1.isFunction(retryOn) || Array.isArray(retryOn) && retryOn.every(utils_1.isPositiveNumber);\n  utils_1.invariant(isValidRetryOn, '`retryOn` must be an array of positive numbers or a function returning a boolean.');\n  var loading = (options.loading || Array.isArray(dependencies) || !options.lazy) && !(cache_1.default.has(path) && [SWR, CACHE_FIRST].includes(options.cachePolicy));\n  var interceptors = react_1.useMemo(function () {\n    var final = {};\n    if ('request' in options.interceptors) final.request = options.interceptors.request;\n    if ('response' in options.interceptors) final.response = options.interceptors.response;\n    return final;\n  }, [options]);\n  var customOptions = react_1.useMemo(function () {\n    var customOptionKeys = Object.keys(defaults_1.useFetchArgsDefaults.customOptions); // Array<keyof CustomOptions>\n\n    var customOptions = customOptionKeys.reduce(function (opts, key) {\n      opts[key] = options[key];\n      return opts;\n    }, {});\n    return __assign(__assign({}, customOptions), {\n      interceptors: interceptors,\n      loading: loading\n    });\n  }, [interceptors, loading]);\n  return {\n    host: host,\n    path: path,\n    customOptions: customOptions,\n    requestInit: requestInit,\n    dependencies: dependencies\n  };\n}\n\nexports.default = useFetchArgs;","map":{"version":3,"sources":["../src/useFetchArgs.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-nocheck\nvar types_1 = require(\"./types\");\nvar utils_1 = require(\"./utils\");\nvar react_1 = require(\"react\");\nvar FetchContext_1 = __importDefault(require(\"./FetchContext\"));\nvar defaults_1 = __importStar(require(\"./defaults\"));\nvar cache_1 = __importDefault(require(\"./cache\"));\nvar SWR = types_1.CachePolicies.SWR, CACHE_FIRST = types_1.CachePolicies.CACHE_FIRST;\nfunction useFetchArgs(urlOrPathOrOptionsOrOverwriteGlobalOptions, optionsOrOverwriteGlobalOrDeps, deps) {\n    utils_1.invariant(!(utils_1.isObject(urlOrPathOrOptionsOrOverwriteGlobalOptions) && utils_1.isObject(optionsOrOverwriteGlobalOrDeps)), 'You cannot have a 2nd parameter of useFetch as object when your first argument is an object.');\n    var context = react_1.useContext(FetchContext_1.default);\n    var host = react_1.useMemo(function () {\n        var maybeHost = urlOrPathOrOptionsOrOverwriteGlobalOptions;\n        if (utils_1.isString(maybeHost) && maybeHost.includes('://'))\n            return maybeHost;\n        if (context.url)\n            return context.url;\n        return defaults_1.default.host;\n    }, [context.url, urlOrPathOrOptionsOrOverwriteGlobalOptions]);\n    var path = react_1.useMemo(function () {\n        var maybePath = urlOrPathOrOptionsOrOverwriteGlobalOptions;\n        if (utils_1.isString(maybePath) && !maybePath.includes('://'))\n            return maybePath;\n    }, [urlOrPathOrOptionsOrOverwriteGlobalOptions]);\n    var overwriteGlobalOptions = react_1.useMemo(function () {\n        if (utils_1.isFunction(urlOrPathOrOptionsOrOverwriteGlobalOptions))\n            return urlOrPathOrOptionsOrOverwriteGlobalOptions;\n        if (utils_1.isFunction(optionsOrOverwriteGlobalOrDeps))\n            return optionsOrOverwriteGlobalOrDeps;\n    }, []);\n    var options = react_1.useMemo(function () {\n        var localOptions = { headers: {} };\n        if (utils_1.isObject(urlOrPathOrOptionsOrOverwriteGlobalOptions)) {\n            localOptions = urlOrPathOrOptionsOrOverwriteGlobalOptions;\n        }\n        else if (utils_1.isObject(optionsOrOverwriteGlobalOrDeps)) {\n            localOptions = optionsOrOverwriteGlobalOrDeps;\n        }\n        var globalOptions = context.options;\n        var finalOptions = __assign(__assign(__assign(__assign({}, defaults_1.default), globalOptions), localOptions), { headers: __assign(__assign(__assign({}, defaults_1.default.headers), globalOptions.headers), localOptions.headers), interceptors: __assign(__assign(__assign({}, defaults_1.default.interceptors), globalOptions.interceptors), localOptions.interceptors) });\n        if (overwriteGlobalOptions)\n            return overwriteGlobalOptions(finalOptions);\n        return finalOptions;\n    }, [urlOrPathOrOptionsOrOverwriteGlobalOptions, overwriteGlobalOptions, context.options]);\n    var requestInit = react_1.useMemo(function () { return utils_1.pullOutRequestInit(options); }, [options]);\n    var dependencies = react_1.useMemo(function () {\n        if (Array.isArray(optionsOrOverwriteGlobalOrDeps))\n            return optionsOrOverwriteGlobalOrDeps;\n        if (Array.isArray(deps))\n            return deps;\n        return defaults_1.default.dependencies;\n    }, [optionsOrOverwriteGlobalOrDeps, deps]);\n    var cacheStaleAfter = options.cacheStaleAfter, retries = options.retries, retryDelay = options.retryDelay, retryOn = options.retryOn;\n    utils_1.invariant(Number.isInteger(cacheStaleAfter) && cacheStaleAfter >= 0, '`cacheStaleAfter` must be a number >= 0');\n    utils_1.invariant(Number.isInteger(retries) && retries >= 0, '`retries` must be a number >= 0');\n    utils_1.invariant(utils_1.isFunction(retryDelay) || Number.isInteger(retryDelay) && retryDelay >= 0, '`retryDelay` must be a positive number or a function returning a positive number.');\n    var isValidRetryOn = utils_1.isFunction(retryOn) || (Array.isArray(retryOn) && retryOn.every(utils_1.isPositiveNumber));\n    utils_1.invariant(isValidRetryOn, '`retryOn` must be an array of positive numbers or a function returning a boolean.');\n    var loading = (options.loading || Array.isArray(dependencies) || !options.lazy) && !(cache_1.default.has(path) && [SWR, CACHE_FIRST].includes(options.cachePolicy));\n    var interceptors = react_1.useMemo(function () {\n        var final = {};\n        if ('request' in options.interceptors)\n            final.request = options.interceptors.request;\n        if ('response' in options.interceptors)\n            final.response = options.interceptors.response;\n        return final;\n    }, [options]);\n    var customOptions = react_1.useMemo(function () {\n        var customOptionKeys = Object.keys(defaults_1.useFetchArgsDefaults.customOptions); // Array<keyof CustomOptions>\n        var customOptions = customOptionKeys.reduce(function (opts, key) {\n            opts[key] = options[key];\n            return opts;\n        }, {});\n        return __assign(__assign({}, customOptions), { interceptors: interceptors, loading: loading });\n    }, [interceptors, loading]);\n    return {\n        host: host,\n        path: path,\n        customOptions: customOptions,\n        requestInit: requestInit,\n        dependencies: dependencies\n    };\n}\nexports.default = useFetchArgs;\n//# sourceMappingURL=useFetchArgs.js.map"]},"metadata":{},"sourceType":"script"}