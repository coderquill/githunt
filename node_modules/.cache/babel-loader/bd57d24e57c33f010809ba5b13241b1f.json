{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _1 = __importStar(require(\".\"));\n\nvar react_1 = require(\"react\");\n\nvar utils_1 = require(\"./utils\");\n\nexports.useQuery = function (urlOrQuery, queryArg) {\n  var context = react_1.useContext(_1.FetchContext);\n  utils_1.useURLRequiredInvariant(!!context.url && Array.isArray(urlOrQuery), 'useQuery');\n  utils_1.useURLRequiredInvariant(!!context.url || utils_1.isString(urlOrQuery) && !queryArg, 'useQuery', 'OR you need to do useQuery(\"https://example.com\", `your graphql query`)'); // regular no context: useQuery('https://example.com', `graphql QUERY`)\n\n  var url = urlOrQuery;\n  var QUERY = queryArg; // tagged template literal with context: useQuery`graphql QUERY`\n\n  if (Array.isArray(urlOrQuery) && context.url) {\n    utils_1.invariant(!queryArg, 'You cannot have a 2nd argument when using tagged template literal syntax with useQuery.');\n    url = context.url;\n    QUERY = urlOrQuery[0]; // regular with context: useQuery(`graphql QUERY`)\n  } else if (urlOrQuery && !queryArg && context.url) {\n    url = context.url;\n    QUERY = urlOrQuery;\n  }\n\n  var _a = _1.default(url),\n      loading = _a.loading,\n      error = _a.error,\n      cache = _a.cache,\n      request = __rest(_a, [\"loading\", \"error\", \"cache\"]);\n\n  var query = react_1.useCallback(function (variables) {\n    return request.query(QUERY, variables);\n  }, [QUERY, request]);\n  var data = (request.data || {\n    data: undefined\n  }).data;\n  return Object.assign([data, loading, error, query], {\n    data: data,\n    loading: loading,\n    error: error,\n    query: query,\n    cache: cache\n  });\n};","map":{"version":3,"sources":["../src/useQuery.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,EAAA,GAAA,YAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAca,OAAA,CAAA,QAAA,GAAW,UACtB,UADsB,EAEtB,QAFsB,EAEL;AAEjB,MAAM,OAAO,GAAG,OAAA,CAAA,UAAA,CAAW,EAAA,CAAA,YAAX,CAAhB;AAEA,EAAA,OAAA,CAAA,uBAAA,CACE,CAAC,CAAC,OAAO,CAAC,GAAV,IAAiB,KAAK,CAAC,OAAN,CAAc,UAAd,CADnB,EAEE,UAFF;AAIA,EAAA,OAAA,CAAA,uBAAA,CACE,CAAC,CAAC,OAAO,CAAC,GAAV,IAAkB,OAAA,CAAA,QAAA,CAAS,UAAT,KAAwB,CAAC,QAD7C,EAEE,UAFF,EAGE,yEAHF,EARiB,CAcjB;;AACA,MAAI,GAAG,GAAG,UAAV;AACA,MAAI,KAAK,GAAG,QAAZ,CAhBiB,CAkBjB;;AACA,MAAI,KAAK,CAAC,OAAN,CAAc,UAAd,KAA6B,OAAO,CAAC,GAAzC,EAA8C;AAC5C,IAAA,OAAA,CAAA,SAAA,CACE,CAAC,QADH,EAEE,yFAFF;AAIA,IAAA,GAAG,GAAG,OAAO,CAAC,GAAd;AACA,IAAA,KAAK,GAAG,UAAU,CAAC,CAAD,CAAlB,CAN4C,CAQ5C;AACD,GATD,MASO,IAAI,UAAU,IAAI,CAAC,QAAf,IAA2B,OAAO,CAAC,GAAvC,EAA4C;AACjD,IAAA,GAAG,GAAG,OAAO,CAAC,GAAd;AACA,IAAA,KAAK,GAAG,UAAR;AACD;;AAED,MAAM,EAAA,GAAA,EAAA,CAAA,OAAA,CAAA,GAAA,CAAN;AAAA,MAAQ,OAAA,GAAA,EAAA,CAAA,OAAR;AAAA,MAAiB,KAAA,GAAA,EAAA,CAAA,KAAjB;AAAA,MAAwB,KAAA,GAAA,EAAA,CAAA,KAAxB;AAAA,MAA+B,OAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAA/B;;AAEA,MAAM,KAAK,GAAG,OAAA,CAAA,WAAA,CACZ,UAAC,SAAD,EAAmB;AAAmB,WAAA,OAAO,CAAC,KAAR,CAAc,KAAd,EAAA,SAAA,CAAA;AAA+B,GADzD,EAEZ,CAAC,KAAD,EAAQ,OAAR,CAFY,CAAd;AAKA,MAAM,IAAI,GAAG,CAAC,OAAO,CAAC,IAAR,IAAyC;AAAE,IAAA,IAAI,EAAE;AAAR,GAA1C,EAA+D,IAA5E;AAEA,SAAO,MAAM,CAAC,MAAP,CACL,CAAC,IAAD,EAAO,OAAP,EAAgB,KAAhB,EAAuB,KAAvB,CADK,EAEL;AAAE,IAAA,IAAI,EAAA,IAAN;AAAQ,IAAA,OAAO,EAAA,OAAf;AAAiB,IAAA,KAAK,EAAA,KAAtB;AAAwB,IAAA,KAAK,EAAA,KAA7B;AAA+B,IAAA,KAAK,EAAA;AAApC,GAFK,CAAP;AAID,CAhDY","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __importStar(require(\".\"));\nvar react_1 = require(\"react\");\nvar utils_1 = require(\"./utils\");\nexports.useQuery = function (urlOrQuery, queryArg) {\n    var context = react_1.useContext(_1.FetchContext);\n    utils_1.useURLRequiredInvariant(!!context.url && Array.isArray(urlOrQuery), 'useQuery');\n    utils_1.useURLRequiredInvariant(!!context.url || (utils_1.isString(urlOrQuery) && !queryArg), 'useQuery', 'OR you need to do useQuery(\"https://example.com\", `your graphql query`)');\n    // regular no context: useQuery('https://example.com', `graphql QUERY`)\n    var url = urlOrQuery;\n    var QUERY = queryArg;\n    // tagged template literal with context: useQuery`graphql QUERY`\n    if (Array.isArray(urlOrQuery) && context.url) {\n        utils_1.invariant(!queryArg, 'You cannot have a 2nd argument when using tagged template literal syntax with useQuery.');\n        url = context.url;\n        QUERY = urlOrQuery[0];\n        // regular with context: useQuery(`graphql QUERY`)\n    }\n    else if (urlOrQuery && !queryArg && context.url) {\n        url = context.url;\n        QUERY = urlOrQuery;\n    }\n    var _a = _1.default(url), loading = _a.loading, error = _a.error, cache = _a.cache, request = __rest(_a, [\"loading\", \"error\", \"cache\"]);\n    var query = react_1.useCallback(function (variables) { return request.query(QUERY, variables); }, [QUERY, request]);\n    var data = (request.data || { data: undefined }).data;\n    return Object.assign([data, loading, error, query], { data: data, loading: loading, error: error, query: query, cache: cache });\n};\n//# sourceMappingURL=useQuery.js.map"]},"metadata":{},"sourceType":"script"}